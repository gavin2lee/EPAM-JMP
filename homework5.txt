se find the homework -5 details below.

Scenarios to be implemented for Homework:

1. Find all the accidents by ID(Note: We can use findOne method which will accept the Accident ID as PK).
2. Find all the accidents count groupby all roadsurface conditions .
3. Find all the accidents count groupby accident year and weather condition .( For eg: in year 2009 we need to know the number of accidents based on each weather condition).
4. On a given date,  fetch all the accidents and update the Time based on the below rules
Time Logic: 
MORNING - 6 am to 12 pm
AFTERNOON - 12 pm to 6 pm
EVENING - 6 pm to 12 am
NIGHT - 12 am to 6 am

    
Recommendations:

1. For above scenarios, you can use either Spring JDBC/ORM  or use Spring Data as we discussed in the session.â€‹
2. Use DI (either setter/constructor) for some dependencies.
3. For repositories use Autowiring either declarative or Annotation approach.
4. Please write the entities for all the tables required with all the associations using JPA annotations.
5. DB related properties will be defined in persistence.xml
6. JPA will be configured in spring config file which inturn will search for persistence.xml under META-INF/persistence.xml.

Examples are availabe in below package:

com.epam.demo.springdataexample1 -> example1 discussed in session
com.epam.demo.springdataexample2 -> example2 discussed in session
com.epam.dbrepositories  -> All repositories required for Spring Data will be here.
com.epam.dbservice           -> Service Interface
com.epam.entities               -> Will have the entities required by JPA incase you are using Spring Data JPA aaproach
com.epam.processor. AccidentDBServiceImpl -> will actually interact with Spring Data repositories                


The idea is after this assignment, same code can be used for further assigments like to integrate Spring BOOT and also for building the REST API so that once we give the URL , we can connect to the database and reuse the same codebase to return the results.


Examples will be available in the master branch once they are merged so that all can access them from master branch.
